/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import classes.Restaurant;
import classes.Review;
import classes.Shop;
import classes.Theater;
import org.junit.Test;

import static org.junit.Assert.*;

public class LibraryTest {
    Restaurant testRes = new Restaurant("Burger", 262.2);
    Review testRev = new Review("Great!", "Noor", 5);
    Shop testShop = new Shop("Avenue Mall","Everything",20.2);
    Review testTev = new Review("Not Good", "Hala", 1);
    //Movies
    String movie1="The Call";
    String movie2="A Quiet Place";
    String movie3="Don't Breathe";
    //Theater
    Theater testTheater = new Theater("Rex Theatre");


    @Test
    public void ResMethods() {
        //Restaurant Object before Insertion, toStringTest
        assertEquals("Restaurant Object before Insertion failed",
                "Restaurant{name='Burger', priceCategory=262.2$\n" +
                        ", Number of reviews=[]\n" +
                        ", Rate=0}", String.valueOf(testRes));

        //getName()
        assertEquals("Getting the name failed",
                "Burger",
                testRes.getName());

        //getPriceCategory()
        assertEquals("getPriceCategory failed",
                testRes.getPriceCategory(),
                "262.2$");

        //getReview() before adding review
        assertEquals("getReview failed",
                String.valueOf(testRes.getReview()),
                "[]");

        //checkStars before adding review
        assertEquals("checkStars before adding review failed",
                testRes.checkStars(),
                0);

        //addReview
        testRes.addReview(testRev);

        //getReview() after adding review
        assertEquals("getReview() after adding review failed",
                String.valueOf(testRes.getReview()),
                "[Review{, body='Great!', author='Noor', stars='5'}]");

        //checkStars() after the first review
        assertEquals("checkStars() after the first review failed",
                testRes.checkStars(),
                5);

        //Restaurant Object after Insertion, toStringTest
        assertEquals("Restaurant{name='Burger', priceCategory=262.2$\n" +
                ", Number of reviews=[Review{, body='Great!', author='Noor', stars='5'}]\n" +
                ", Rate=5}", String.valueOf(testRes));
    }

    /************/

    @Test
    public void RevMethods() {
        //getAuthor()
        assertEquals("Noor", testRev.getAuthor());

        //getBody()
        assertEquals("getBody() failed", testRev.getBody(), "Great!");

        //getStars()
        assertEquals("getStars() failed",
                testRev.getStars(),
                5);

        //toStringTest
        assertEquals("Review{, body='Great!', author='Noor', stars='5'}",
                String.valueOf(testRev));
    }
    @Test
    public void ShopMethods() {
        //Shop before AnyReview
        assertEquals("Shop {name='Avenue Mall', description='Everything', priceCategory=20.2\n" +
                ", Shop Review=[]}", String.valueOf(testShop));

        //getName()
        assertEquals("getName() failed", testShop.getName(), "Avenue Mall");

       //getDescription()
        assertEquals("getDescription() failed",
                testShop.getDescription(),
                "Everything");

        //Review Before
        assertEquals("Review Before",
                String.valueOf(testShop.getReview()),
                "[]");
        testShop.addReview(testRev);
        //Review After
        assertEquals("Review After",
                String.valueOf(testShop.getReview()),
                "[Review{, body='Great!', author='Noor', stars='5'}]");

        //toStringTest After
        assertEquals("Shop {name='Avenue Mall', description='Everything', priceCategory=20.2\n" +
                        ", Shop Review=[Review{, body='Great!', author='Noor', stars='5'}]}",
                String.valueOf(testShop));
    }

    @Test
    public void TheaterMethods() {
        //Theater before AnyReview
        assertEquals("Theater{name=' Rex Theatre', movie= []\n" +
                ", Theater Reviews= []\n" +
                ", Movie Reviews= {}}",
                String.valueOf(testTheater));

        //getName()
        assertEquals("getName() failed", testTheater.getName(), "Rex Theatre");

        //before Theater review
        assertEquals("getReview() before Theater review failed",
                String.valueOf(testTheater.getReview()),
                "[]");

        //before Movie review
        assertEquals("getReviews() before Movie review failed",
                String.valueOf(testTheater.getReviews()),
                "{}");

        //before add Movie
        assertEquals("getMovie() before Movie failed",
                String.valueOf(testTheater.getMovie()),
                "[]");

        testTheater.addMovie(movie1);
        testTheater.addMovie(movie2);
        testTheater.removeMovie(movie1);

        //After remove One Movie
        assertEquals("getMovie() After remove One Movie failed",
                String.valueOf(testTheater.getMovie()),
                "[A Quiet Place]");

        testTheater.removeMovie(movie2);

        //After remove all Movies
        assertEquals("getMovie() After remove all Movies failed",
                String.valueOf(testTheater.getMovie()),
                "[]");

        testTheater.addMovie(movie1);
        testTheater.addMovie(movie2);
        testTheater.addMovie(movie3);

        //After add 3 Movies
        assertEquals("getMovie() After add 3 Movies failed",
                String.valueOf(testTheater.getMovie()),
                "[The Call, A Quiet Place, Don't Breathe]");

        testTheater.addReview(testRev);

        //After Theater review
        assertEquals("[Review{, body='Great!', author='Noor', stars='5'}]",
                String.valueOf(testTheater.getReview()));

        testTheater.addReview(testRev,movie1);

        //After Movie review
        assertEquals("{The Call=Review{, body='Great!', author='Noor', stars='5'}}",
                String.valueOf(testTheater.getReview()));




    }

}
